{{- if (include "scdf.server.createConfigmap" .) }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "scdf.fullname" . }}-server
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: server
data:
  application.yaml: |-
    spring:
      cloud:
        dataflow:
          {{- if .Values.server.configuration.batchEnabled }}
          task:
            platform:
              kubernetes:
                accounts:
                  {{ .Values.server.configuration.accountName }}:
                    {{- if .Values.deployer.resources.limits }}
                    limits: {{- toYaml .Values.deployer.resources.limits | trim | nindent 22 }}
                    {{- end }}
                    {{- if .Values.deployer.resources.requests }}
                    requests: {{- toYaml .Values.deployer.resources.requests | trim | nindent 22 }}
                    {{- end }}
          {{- end }}
          {{- if .Values.server.configuration.containerRegistries }}
          container:
            registry-configurations: {{- include "common.tplvalues.render" (dict "value" .Values.server.configuration.containerRegistries "context" $) | nindent 14 }}
          {{- end }}
          {{- if .Values.metrics.enabled }}
          {{- $fullname := include "scdf.fullname" . }}
          {{- $rsocketPort := int .Values.metrics.service.rsocketPort }}
          applicationProperties:
            {{- if .Values.server.configuration.streamingEnabled }}
            stream:
              management:
                metrics:
                  export:
                    prometheus:
                      enabled: true
                      rsocket:
                        enabled: true
                        host: {{ $fullname }}-prometheus-proxy
                        port: {{ $rsocketPort }}
            {{- end }}
            {{- if .Values.server.configuration.batchEnabled }}
            task:
              management:
                metrics:
                  export:
                    prometheus:
                      enabled: true
                      rsocket:
                        enabled: true
                        host: {{ $fullname }}-prometheus-proxy
                        port: {{ $rsocketPort }}
            {{- end }}
          {{- end }}
      {{- $hibernateDialect := include "scdf.database.hibernate.dialect" .  }}
      {{- if $hibernateDialect }}
      jpa:
        properties:
          hibernate:
            dialect: {{ $hibernateDialect }}
      {{- end }}
      datasource:
        {{- $databaseScheme := include "scdf.database.scheme" .  }}
        {{- $databaseHost := include "scdf.database.host" .  }}
        {{- $databasePort := include "scdf.database.port" .  }}
        {{- $databaseName := include "scdf.database.server.name" .  }}
        {{- $jdbcParameters := include "scdf.database.jdbc.parameters" .  }}
        url: 'jdbc:{{ $databaseScheme }}://{{ $databaseHost }}:{{ $databasePort }}/{{ $databaseName }}{{ $jdbcParameters }}'
        driverClassName: {{ include "scdf.database.driver" . }}
        username: {{ include "scdf.database.server.user" . }}
        {{ if .Values.externalDatabase.existingPasswordSecret }}
        password: ${datasource-password}
        {{- else -}}
        password: ${mariadb-password}
        {{- end }}
        testOnBorrow: true
        validationQuery: "SELECT 1"
{{ end }}
